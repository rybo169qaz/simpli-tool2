---
- name: install simpli tool suite
  hosts: wanted
  become: yes
  vars_files:
    - vars.yml

  tasks:

    - name: 1. create local bin folders
      ansible.builtin.file:
        path: "{{ local_bin }}"
        state: directory
        owner: robert
        group: robert
        mode: 0775

    - name: 2. create simpli folder
      ansible.builtin.file:
        path: "{{ simpli_dir }}"
        state: directory
        owner: robert
        group: robert
        mode: 0775

    - name: 3. create simpli sub folders
      ansible.builtin.file:
        path: "{{ simpli_dir }}/{{ item }}"
        state: directory
        owner: robert
        group: robert
        mode: 0775
      loop:
        - info
        - config
        - media
        - utils
        - packages
        - logs

    - name: 4. copy scripts to utils
      ansible.builtin.copy:
        src: "{{ src_deployment_dir }}/utils/"
        dest: "{{ simpli_dir }}/utils/"
        owner: robert
        group: robert
        mode: '0755'
      tags: gendesk

    - name: 5. link utils # https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html
      ansible.builtin.shell:
        cmd: |
          /usr/bin/rm -f "{{ local_bin }}/{{ item.link_end }}"
          /usr/bin/ln -s "{{ simpli_dir }}/utils/{{ item.actual }}" "{{ local_bin }}/{{ item.link_end }}"
      loop:
        - { actual: 'know-device.sh', link_end: 'simpli-report' }
        - { actual: 'start-zoom.sh', link_end: 'simpli-zoom' }
        - { actual: 'vlc-watch.sh', link_end: 'simpli-watch' }
        - { actual: 'env_config.sh', link_end: 'simpli-config' }

    - name: 6A. update device info with node name
      ansible.builtin.shell:
        cmd: |
          echo 'Simpli Device info'
          echo '================== '
          echo 'HOSTNAME == {{ inventory_hostname }}'
          echo 'MAC == {{ clients[inventory_hostname].mac_wired }}'
          echo -n 'UNAME == '
          /usr/bin/uname -a 
          echo 'LINUX_USER == {{ clients[inventory_hostname].os_account }}'
          echo 'PERSON == {{ clients[inventory_hostname].person }}'
          echo 'COMMENT == {{ clients[inventory_hostname].comment }}'
          echo -n 'DEPLOY DATE == '
          /usr/bin/date
          echo 'ANSIBLE_HOSTNAME == {{ ansible_hostname }}'
          echo ---
          echo
      register: command_output

    - name: 6B. Print output to file # '/home/robert/.simpli/info/dev-info.txt'
      ansible.builtin.copy:
        content: "{{command_output.stdout}}"
        dest: "{{ device_info_file }}"
        owner: robert
        group: robert
        mode: '0444'

    - name: 7. remove utils in .local/bin - these are historical
      ansible.builtin.file:
        name: "{{ local_bin }}/{{ item }}"
        state: absent
      loop:
        - know-device.sh
        - startzoom.sh
        - vlc-watch.sh
        - report
        - simplireport
      when: False

    - name: 10. copy Desktop related files e.g. png of icon
      ansible.builtin.copy:
        src: "{{ src_desktop_images }}/"
        dest: "{{ simpli_config_dir }}/"
        owner: robert
        group: robert
        mode: '0755'
      tags: gendesk

    - name: 11. copy config files
      ansible.builtin.copy:
        src: "{{ src_desktop_config }}/"
        dest: "{{ simpli_config_dir }}/"
        owner: robert
        group: robert
        mode: '0755'
      tags: gendesk


    - name: 11. copy Template file
      ansible.builtin.copy:
        src: "{{ src_desktop_config }}/template.desktop/"
        dest: "{{ simpli_config_dir }}/info"
        owner: robert
        group: robert
        mode: '0755'
      tags: gendesk

    - name: 12. copy Media file
      ansible.builtin.copy:
        src: "{{ src_media_folder }}"
        dest: "{{ simpli_dir }}/media"
        owner: robert
        group: robert
        mode: '0644'

    - name: 13. create derived desktop
      ansible.builtin.shell:
        cmd: /usr/bin/python3 {{ simpli_utils_dir }}/create_desktop.py {{ simpli_config_dir }}/template.desktop {{ simpli_config_dir }}/desktop_known.yml {{ desktop_dir }} RobR
      tags: gendesk

    - name: 14A. generate report
      ansible.builtin.shell:
        cmd: '{{ simpli_utils_dir }}/know-device.sh show'
      tags: report

    - name: 14B. perform initial check
      ansible.builtin.shell:
        cmd: '{{ simpli_utils_dir }}/know-device.sh check'
      tags: report

    - name: 14C. desktop setg
      ansible.builtin.shell:
        cmd: '{{ simpli_utils_dir }}/env_config.sh setg'
      tags: report

    - name: 14D. desktop setlight
      ansible.builtin.shell:
        cmd: '{{ simpli_utils_dir }}/env_config.sh setlight'
      tags: report

    - name: 14E. desktop xset
      ansible.builtin.shell:
        cmd: '{{ simpli_utils_dir }}/env_config.sh xset'
      tags: report

    - name: 14F. perform final check
      ansible.builtin.shell:
        cmd: '{{ simpli_utils_dir }}/know-device.sh check'
      tags: report

    - name: X4C. show the output
      debug:
        msg:
          - "Check Failed!"
          - "{{ create_desktop_output.stdout_lines }}"
      when: 1 > 2










